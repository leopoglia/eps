
CREATE TABLE PAIS (
    PAIS_ID    NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    NOME       VARCHAR2(100) NOT NULL UNIQUE,
    CONTINENTE VARCHAR2(50)
);

CREATE TABLE GENERO (
    GENERO_ID NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    NOME      VARCHAR2(50) NOT NULL UNIQUE
);

CREATE TABLE CLASSIFICACAO_IDADE (
    CLASSIFICACAO_ID NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    ROTULO           VARCHAR2(10) NOT NULL UNIQUE,
    IDADE_MINIMA     NUMBER(2) NOT NULL
);

CREATE TABLE ATOR (
    ATOR_ID         NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    NOME            VARCHAR2(100) NOT NULL,
    GENERO          CHAR(1) CHECK ( GENERO IN ( 'M', 'F' ) ),
    DATA_NASCIMENTO DATE,
    PAIS_ID         NUMBER
        REFERENCES PAIS ( PAIS_ID )
);

CREATE TABLE DIRETOR (
    DIRETOR_ID      NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    NOME            VARCHAR2(100) NOT NULL,
    GENERO          CHAR(1) CHECK ( GENERO IN ( 'M', 'F' ) ),
    DATA_NASCIMENTO DATE,
    PAIS_ID         NUMBER
        REFERENCES PAIS ( PAIS_ID )
);

CREATE TABLE FILME (
    FILME_ID         NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    TITULO           VARCHAR2(200) NOT NULL,
    ANO_LANCAMENTO   NUMBER(4),
    DURACAO_MIN      NUMBER,
    RESOLUCAO        VARCHAR2(20),
    GENERO_ID        NUMBER
        REFERENCES GENERO ( GENERO_ID ),
    PAIS_ID          NUMBER
        REFERENCES PAIS ( PAIS_ID ),
    CLASSIFICACAO_ID NUMBER
        REFERENCES CLASSIFICACAO_IDADE ( CLASSIFICACAO_ID ),
    ESTA_ATIVO       CHAR(1) DEFAULT 'Y' CHECK ( ESTA_ATIVO IN ( 'Y', 'N' ) )
);

CREATE TABLE SERIE (
    SERIE_ID         NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    TITULO           VARCHAR2(200) NOT NULL,
    ANO_LANCAMENTO   NUMBER(4),
    GENERO_ID        NUMBER
        REFERENCES GENERO ( GENERO_ID ),
    PAIS_ID          NUMBER
        REFERENCES PAIS ( PAIS_ID ),
    CLASSIFICACAO_ID NUMBER
        REFERENCES CLASSIFICACAO_IDADE ( CLASSIFICACAO_ID ),
    ESTA_ATIVO       CHAR(1) DEFAULT 'Y' CHECK ( ESTA_ATIVO IN ( 'Y', 'N' ) )
);

CREATE TABLE TEMPORADA (
    TEMPORADA_ID     NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    SERIE_ID         NUMBER
        REFERENCES SERIE ( SERIE_ID ),
    NUMERO_TEMPORADA NUMBER NOT NULL,
    CONSTRAINT UK_SERIE_TEMPORADA UNIQUE ( SERIE_ID,
                                           NUMERO_TEMPORADA )
);

CREATE TABLE EPISODIO (
    EPISODIO_ID     NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    TEMPORADA_ID    NUMBER
        REFERENCES TEMPORADA ( TEMPORADA_ID ),
    NUMERO_EPISODIO NUMBER NOT NULL,
    TITULO          VARCHAR2(200) NOT NULL,
    DURACAO_MIN     NUMBER,
    DATA_LANCAMENTO DATE,
    CONSTRAINT UK_EPISODIO UNIQUE ( TEMPORADA_ID,
                                    NUMERO_EPISODIO )
);

CREATE TABLE PERSONAGEM (
    PERSONAGEM_ID NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    NOME          VARCHAR2(200)
);

CREATE TABLE ATOR_FILME (
    ATOR_ID       NUMBER
        REFERENCES ATOR ( ATOR_ID ),
    FILME_ID      NUMBER
        REFERENCES FILME ( FILME_ID ),
    PERSONAGEM_ID NUMBER
        REFERENCES PERSONAGEM ( PERSONAGEM_ID ),
    PRIMARY KEY ( ATOR_ID,
                  FILME_ID )
);

CREATE TABLE ATOR_EPISODIO (
    ATOR_ID       NUMBER
        REFERENCES ATOR ( ATOR_ID ),
    EPISODIO_ID   NUMBER
        REFERENCES EPISODIO ( EPISODIO_ID ),
    PERSONAGEM_ID NUMBER
        REFERENCES PERSONAGEM ( PERSONAGEM_ID ),
    PRIMARY KEY ( ATOR_ID,
                  EPISODIO_ID )
);

CREATE TABLE DIRETOR_FILME (
    DIRETOR_ID NUMBER
        REFERENCES DIRETOR ( DIRETOR_ID ),
    FILME_ID   NUMBER
        REFERENCES FILME ( FILME_ID ),
    PRIMARY KEY ( DIRETOR_ID,
                  FILME_ID )
);

CREATE TABLE DIRETOR_EPISODIO (
    DIRETOR_ID  NUMBER
        REFERENCES DIRETOR ( DIRETOR_ID ),
    EPISODIO_ID NUMBER
        REFERENCES EPISODIO ( EPISODIO_ID ),
    PRIMARY KEY ( DIRETOR_ID,
                  EPISODIO_ID )
);

CREATE TABLE PREMIACAO (
    PREMIACAO_ID  NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    NOME          VARCHAR2(200),
    ANO_PREMIACAO NUMBER(4),
    CATEGORIA     VARCHAR2(50),
    ATOR_ID       NUMBER
        REFERENCES ATOR ( ATOR_ID ),
    DIRETOR_ID    NUMBER
        REFERENCES DIRETOR ( DIRETOR_ID ),
    FILME_ID      NUMBER
        REFERENCES FILME ( FILME_ID ),
    SERIE_ID      NUMBER
        REFERENCES SERIE ( SERIE_ID ),
    TEMPORADA_ID  NUMBER
        REFERENCES TEMPORADA ( TEMPORADA_ID ),
    EPISODIO_ID   NUMBER
        REFERENCES EPISODIO ( EPISODIO_ID )
);

CREATE TABLE AVALIACAO (
    AVALIACAO_ID NUMBER
        GENERATED BY DEFAULT AS IDENTITY
    PRIMARY KEY,
    NOTA         NUMBER(3, 1) CHECK ( NOTA BETWEEN 0 AND 10 ),
    COMENTARIOS  VARCHAR2(500),
    ATOR_ID      NUMBER
        REFERENCES ATOR ( ATOR_ID ),
    DIRETOR_ID   NUMBER
        REFERENCES DIRETOR ( DIRETOR_ID ),
    FILME_ID     NUMBER
        REFERENCES FILME ( FILME_ID ),
    SERIE_ID     NUMBER
        REFERENCES SERIE ( SERIE_ID ),
    TEMPORADA_ID NUMBER
        REFERENCES TEMPORADA ( TEMPORADA_ID ),
    EPISODIO_ID  NUMBER
        REFERENCES EPISODIO ( EPISODIO_ID )
);

CREATE OR REPLACE TRIGGER TRG_DEL_FILME_PREMIACOES AFTER
    DELETE ON FILME
    FOR EACH ROW
BEGIN
    DELETE FROM PREMIACAO
    WHERE
        FILME_ID = :OLD.FILME_ID;

END;
/

CREATE OR REPLACE TRIGGER TRG_DEL_SERIE_PREMIACOES AFTER
    DELETE ON SERIE
    FOR EACH ROW
BEGIN
    DELETE FROM PREMIACAO
    WHERE
        SERIE_ID = :OLD.SERIE_ID;

END;
/

CREATE OR REPLACE FUNCTION FN_TOTAL_PREMIACOES_FILME (
    P_FILME_ID NUMBER
) RETURN NUMBER IS
    V_TOTAL NUMBER;
BEGIN
    SELECT
        COUNT(*)
    INTO V_TOTAL
    FROM
        PREMIACAO P
    WHERE
        P.FILME_ID = P_FILME_ID
        OR P.ATOR_ID IN (
            SELECT
                ATOR_ID
            FROM
                ATOR_FILME
            WHERE
                FILME_ID = P_FILME_ID
        )
        OR P.DIRETOR_ID IN (
            SELECT
                DIRETOR_ID
            FROM
                DIRETOR_FILME
            WHERE
                FILME_ID = P_FILME_ID
        );

    RETURN V_TOTAL;
END;
/

CREATE OR REPLACE PROCEDURE PR_INATIVAR_POR_PAIS (
    P_PAIS_ID NUMBER
) IS
BEGIN
    UPDATE FILME
    SET
        ESTA_ATIVO = 'N'
    WHERE
        PAIS_ID = P_PAIS_ID;

    UPDATE SERIE
    SET
        ESTA_ATIVO = 'N'
    WHERE
        PAIS_ID = P_PAIS_ID;

END;
/

DELETE FROM PREMIACAO;

DELETE FROM AVALIACAO;

DELETE FROM DIRETOR_EPISODIO;

DELETE FROM ATOR_EPISODIO;

DELETE FROM EPISODIO;

DELETE FROM TEMPORADA;

DELETE FROM SERIE;

DELETE FROM DIRETOR_FILME;

DELETE FROM ATOR_FILME;

DELETE FROM FILME;

DELETE FROM PERSONAGEM;

DELETE FROM DIRETOR;

DELETE FROM ATOR;

DELETE FROM CLASSIFICACAO_IDADE;

DELETE FROM GENERO;

DELETE FROM PAIS;

COMMIT;

DECLARE
    PROCEDURE REINICIAR_IDENTIDADE (
        P_TABELA VARCHAR2,
        P_COLUNA VARCHAR2
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'ALTER TABLE '
                          || P_TABELA
                          || ' MODIFY '
                          || P_COLUNA
                          || ' GENERATED BY DEFAULT ON
NULL AS IDENTITY (START WITH 1)';
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;

BEGIN
    REINICIAR_IDENTIDADE('pais', 'pais_id');
    REINICIAR_IDENTIDADE('genero', 'genero_id');
    REINICIAR_IDENTIDADE('classificacao_idade', 'classificacao_id');
    REINICIAR_IDENTIDADE('ator', 'ator_id');
    REINICIAR_IDENTIDADE('diretor', 'diretor_id');
    REINICIAR_IDENTIDADE('filme', 'filme_id');
    REINICIAR_IDENTIDADE('serie', 'serie_id');
    REINICIAR_IDENTIDADE('personagem', 'personagem_id');
END;
/

INSERT INTO PAIS (
    NOME,
    CONTINENTE
) VALUES ( 'EUA',
           'América do Norte' );

INSERT INTO PAIS (
    NOME,
    CONTINENTE
) VALUES ( 'Alemanha',
           'Europa' );

INSERT INTO PAIS (
    NOME,
    CONTINENTE
) VALUES ( 'Reino Unido',
           'Europa' );

INSERT INTO PAIS (
    NOME,
    CONTINENTE
) VALUES ( 'Brasil',
           'América do Sul' );

INSERT INTO PAIS (
    NOME,
    CONTINENTE
) VALUES ( 'França',
           'Europa' );

INSERT INTO PAIS (
    NOME,
    CONTINENTE
) VALUES ( 'Espanha',
           'Europa' );

INSERT INTO PAIS (
    NOME,
    CONTINENTE
) VALUES ( 'Japão',
           'Ásia' );

INSERT INTO GENERO ( NOME ) VALUES ( 'Ação' );

INSERT INTO GENERO ( NOME ) VALUES ( 'Comédia' );

INSERT INTO GENERO ( NOME ) VALUES ( 'Aventura' );

INSERT INTO GENERO ( NOME ) VALUES ( 'Romance' );

INSERT INTO GENERO ( NOME ) VALUES ( 'Drama' );

INSERT INTO GENERO ( NOME ) VALUES ( 'Ficção Científica' );

INSERT INTO CLASSIFICACAO_IDADE (
    ROTULO,
    IDADE_MINIMA
) VALUES ( 'L',
           0 );

INSERT INTO CLASSIFICACAO_IDADE (
    ROTULO,
    IDADE_MINIMA
) VALUES ( '12',
           12 );

INSERT INTO CLASSIFICACAO_IDADE (
    ROTULO,
    IDADE_MINIMA
) VALUES ( '16',
           16 );

INSERT INTO CLASSIFICACAO_IDADE (
    ROTULO,
    IDADE_MINIMA
) VALUES ( '18',
           18 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Leo Valente',
           'M',
           DATE '1980-05-01',
           1 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Sofia Ribeiro',
           'F',
           DATE '1985-07-12',
           4 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Clara Becker',
           'F',
           DATE '1990-03-20',
           2 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Arthur Morgan',
           'M',
           DATE '1975-11-30',
           3 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Matias Schultz',
           'M',
           DATE '1982-02-10',
           2 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Helena Costa',
           'F',
           DATE '1992-09-05',
           3 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Kenji Yamamoto',
           'M',
           DATE '1988-01-15',
           7 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Yumi Hayashi',
           'F',
           DATE '1993-08-08',
           7 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Rafael Oliveira',
           'M',
           DATE '1981-04-22',
           4 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Isabela Jimenez',
           'F',
           DATE '1987-12-02',
           6 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Pierre Dubois',
           'M',
           DATE '1979-06-11',
           5 );

INSERT INTO ATOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Juliette Blanchard',
           'F',
           DATE '1991-11-23',
           5 );

INSERT INTO DIRETOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Maximus Powers',
           'M',
           DATE '1965-04-22',
           1 );

INSERT INTO DIRETOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Serena Vogel',
           'F',
           DATE '1972-10-18',
           2 );

INSERT INTO DIRETOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Beatriz Lima',
           'F',
           DATE '1976-06-30',
           4 );

INSERT INTO DIRETOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Victor Reed',
           'M',
           DATE '1968-12-09',
           3 );

INSERT INTO DIRETOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Amélie Dubois',
           'F',
           DATE '1974-05-05',
           5 );

INSERT INTO DIRETOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Harumi Tanaka',
           'F',
           DATE '1970-09-14',
           7 );

INSERT INTO DIRETOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Alejandro Vargas',
           'M',
           DATE '1966-02-17',
           6 );

INSERT INTO DIRETOR (
    NOME,
    GENERO,
    DATA_NASCIMENTO,
    PAIS_ID
) VALUES ( 'Samuel Wright',
           'M',
           DATE '1963-03-30',
           1 );

INSERT INTO PERSONAGEM ( NOME ) VALUES ( 'Jonas' );

INSERT INTO PERSONAGEM ( NOME ) VALUES ( 'Fantasma, o Cão' );

INSERT INTO PERSONAGEM ( NOME ) VALUES ( 'Zeca Pimentel' );

INSERT INTO PERSONAGEM ( NOME ) VALUES ( 'Kael' );

INSERT INTO PERSONAGEM ( NOME ) VALUES ( 'Explorador Gelo' );

INSERT INTO PERSONAGEM ( NOME ) VALUES ( 'Dama Escarlate' );

INSERT INTO PERSONAGEM ( NOME ) VALUES ( 'Cometa Vermelho' );

INSERT INTO PERSONAGEM ( NOME ) VALUES ( 'Marcus' );

INSERT INTO PERSONAGEM ( NOME ) VALUES ( 'Tiago' );

INSERT INTO PERSONAGEM ( NOME ) VALUES ( 'Luc' );

INSERT INTO FILME (
    TITULO,
    ANO_LANCAMENTO,
    DURACAO_MIN,
    RESOLUCAO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Cume da Coragem',
           2001,
           140,
           '1080p',
           3,
           1,
           2 );

INSERT INTO FILME (
    TITULO,
    ANO_LANCAMENTO,
    DURACAO_MIN,
    RESOLUCAO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'A Conexão de Berlim',
           1999,
           130,
           '1080p',
           1,
           2,
           3 );

INSERT INTO FILME (
    TITULO,
    ANO_LANCAMENTO,
    DURACAO_MIN,
    RESOLUCAO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Rota de Fuga Digital',
           2015,
           120,
           '4K',
           2,
           1,
           1 );

INSERT INTO FILME (
    TITULO,
    ANO_LANCAMENTO,
    DURACAO_MIN,
    RESOLUCAO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'A Longa Jornada',
           2009,
           190,
           '1080p',
           4,
           3,
           3 );

INSERT INTO FILME (
    TITULO,
    ANO_LANCAMENTO,
    DURACAO_MIN,
    RESOLUCAO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'O Segredo do Templo Perdido',
           2000,
           150,
           '1080p',
           3,
           6,
           3 );

INSERT INTO FILME (
    TITULO,
    ANO_LANCAMENTO,
    DURACAO_MIN,
    RESOLUCAO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Destino Inesperado',
           2018,
           110,
           '4K',
           2,
           4,
           1 );

INSERT INTO FILME (
    TITULO,
    ANO_LANCAMENTO,
    DURACAO_MIN,
    RESOLUCAO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'As Crônicas da Liberdade',
           2008,
           200,
           '1080p',
           4,
           5,
           3 );

INSERT INTO FILME (
    TITULO,
    ANO_LANCAMENTO,
    DURACAO_MIN,
    RESOLUCAO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Sombras do Império',
           1998,
           135,
           '1080p',
           3,
           5,
           3 );

INSERT INTO FILME (
    TITULO,
    ANO_LANCAMENTO,
    DURACAO_MIN,
    RESOLUCAO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Protocolo Final',
           2021,
           115,
           '4K',
           2,
           1,
           1 );

INSERT INTO FILME (
    TITULO,
    ANO_LANCAMENTO,
    DURACAO_MIN,
    RESOLUCAO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'O Enigma sem Fim',
           2005,
           185,
           '1080p',
           4,
           2,
           3 );

INSERT INTO SERIE (
    TITULO,
    ANO_LANCAMENTO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Sombras
de Viena',
           2010,
           1,
           2,
           3 );

INSERT INTO SERIE (
    TITULO,
    ANO_LANCAMENTO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Luzes de
Neon',
           2011,
           5,
           2,
           3 );

INSERT INTO SERIE (
    TITULO,
    ANO_LANCAMENTO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Névoa
Sobre o Tâmisa',
           2012,
           1,
           3,
           3 );

INSERT INTO SERIE (
    TITULO,
    ANO_LANCAMENTO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Central
do Riso',
           2015,
           2,
           1,
           1 );

INSERT INTO SERIE (
    TITULO,
    ANO_LANCAMENTO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Coqueiro
Abaixo',
           2016,
           2,
           4,
           1 );

INSERT INTO SERIE (
    TITULO,
    ANO_LANCAMENTO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'A Espada
do Dragão',
           2014,
           1,
           7,
           3 );

INSERT INTO SERIE (
    TITULO,
    ANO_LANCAMENTO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Crônicas
de Andrômeda',
           1999,
           6,
           1,
           3 );

INSERT INTO SERIE (
    TITULO,
    ANO_LANCAMENTO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Cartas de
um Amor Perdido',
           2000,
           4,
           6,
           3 );

INSERT INTO SERIE (
    TITULO,
    ANO_LANCAMENTO,
    GENERO_ID,
    PAIS_ID,
    CLASSIFICACAO_ID
) VALUES ( 'Operação
Trovão',
           2002,
           1,
           5,
           3 );

DECLARE
    V_ID_SERIE  NUMBER;
    V_TEMPORADA NUMBER;
BEGIN
    FOR V_ID_SERIE IN 1..3 LOOP
        FOR V_TEMPORADA IN 1..5 LOOP
            INSERT INTO TEMPORADA (
                SERIE_ID,
                NUMERO_TEMPORADA
            ) VALUES ( V_ID_SERIE,
                       V_TEMPORADA );

        END LOOP;
    END LOOP;

    FOR V_ID_SERIE IN 4..6 LOOP
        FOR V_TEMPORADA IN 1..4 LOOP
            INSERT INTO TEMPORADA (
                SERIE_ID,
                NUMERO_TEMPORADA
            ) VALUES ( V_ID_SERIE,
                       V_TEMPORADA );

        END LOOP;
    END LOOP;

    FOR V_ID_SERIE IN 7..9 LOOP
        INSERT INTO TEMPORADA (
            SERIE_ID,
            NUMERO_TEMPORADA
        ) VALUES ( V_ID_SERIE,
                   1 );

    END LOOP;

END;
/

DECLARE
    V_ID_TEMPORADA NUMBER;
    V_NUM_EP       NUMBER;
BEGIN
    FOR REC IN (
        SELECT
            TEMPORADA_ID
        FROM
            TEMPORADA
    ) LOOP
        V_ID_TEMPORADA := REC.TEMPORADA_ID;
        FOR V_NUM_EP IN 1..4 LOOP
            INSERT INTO EPISODIO (
                TEMPORADA_ID,
                NUMERO_EPISODIO,
                TITULO,
                DURACAO_MIN,
                DATA_LANCAMENTO
            ) VALUES ( V_ID_TEMPORADA,
                       V_NUM_EP,
                       'Episodio '
                       || V_NUM_EP
                       || 'da Temporada'
                       || V_ID_TEMPORADA,
                       46 + MOD(V_NUM_EP, 4),
                       DATE '2010-01-01' + V_ID_TEMPORADA );

        END LOOP;

    END LOOP;
END;
/

INSERT INTO ATOR_FILME VALUES ( 11,
                                10,
                                10 );

INSERT INTO ATOR_FILME VALUES ( 4,
                                4,
                                8 );

INSERT INTO ATOR_FILME VALUES ( 2,
                                3,
                                3 );

INSERT INTO ATOR_FILME VALUES ( 9,
                                7,
                                9 );

INSERT INTO ATOR_FILME VALUES ( 6,
                                6,
                                3 );

INSERT INTO ATOR_FILME VALUES ( 8,
                                9,
                                3 );

INSERT INTO ATOR_FILME VALUES ( 5,
                                9,
                                3 );

INSERT INTO ATOR_FILME VALUES ( 1,
                                1,
                                1 );

INSERT INTO ATOR_FILME VALUES ( 10,
                                9,
                                3 );

INSERT INTO ATOR_FILME VALUES ( 2,
                                9,
                                3 );

INSERT INTO ATOR_FILME VALUES ( 3,
                                5,
                                5 );

INSERT INTO ATOR_EPISODIO VALUES ( 2,
                                   (
                                       SELECT
                                           EPISODIO_ID
                                       FROM
                                                EPISODIO E
                                           JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
                                       WHERE
                                               T.SERIE_ID = 4
                                           AND T.NUMERO_TEMPORADA = 1
                                           AND E.NUMERO_EPISODIO = 1
                                   ),
                                   3 );

INSERT INTO ATOR_EPISODIO VALUES ( 6,
                                   (
                                       SELECT
                                           EPISODIO_ID
                                       FROM
                                                EPISODIO E
                                           JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
                                       WHERE
                                               T.SERIE_ID = 4
                                           AND T.NUMERO_TEMPORADA = 1
                                           AND E.NUMERO_EPISODIO = 1
                                   ),
                                   3 );

INSERT INTO ATOR_EPISODIO VALUES ( 2,
                                   (
                                       SELECT
                                           EPISODIO_ID
                                       FROM
                                                EPISODIO E
                                           JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
                                       WHERE
                                               T.SERIE_ID = 5
                                           AND T.NUMERO_TEMPORADA = 1
                                           AND E.NUMERO_EPISODIO = 1
                                   ),
                                   3 );

INSERT INTO ATOR_EPISODIO VALUES ( 6,
                                   (
                                       SELECT
                                           EPISODIO_ID
                                       FROM
                                                EPISODIO E
                                           JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
                                       WHERE
                                               T.SERIE_ID = 5
                                           AND T.NUMERO_TEMPORADA = 1
                                           AND E.NUMERO_EPISODIO = 1
                                   ),
                                   3 );

INSERT INTO ATOR_EPISODIO VALUES ( 8,
                                   (
                                       SELECT
                                           EPISODIO_ID
                                       FROM
                                                EPISODIO E
                                           JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
                                       WHERE
                                               T.SERIE_ID = 6
                                           AND T.NUMERO_TEMPORADA = 1
                                           AND E.NUMERO_EPISODIO = 1
                                   ),
                                   4 );

INSERT INTO ATOR_EPISODIO VALUES ( 5,
                                   (
                                       SELECT
                                           EPISODIO_ID
                                       FROM
                                                EPISODIO E
                                           JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
                                       WHERE
                                               T.SERIE_ID = 7
                                           AND E.NUMERO_EPISODIO = 1
                                   ),
                                   1 );

INSERT INTO ATOR_EPISODIO VALUES ( 10,
                                   (
                                       SELECT
                                           EPISODIO_ID
                                       FROM
                                                EPISODIO E
                                           JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
                                       WHERE
                                               T.SERIE_ID = 8
                                           AND E.NUMERO_EPISODIO = 1
                                   ),
                                   1 );

INSERT INTO ATOR_EPISODIO VALUES ( 11,
                                   (
                                       SELECT
                                           EPISODIO_ID
                                       FROM
                                                EPISODIO E
                                           JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
                                       WHERE
                                               T.SERIE_ID = 9
                                           AND E.NUMERO_EPISODIO = 1
                                   ),
                                   1 );

INSERT INTO DIRETOR_FILME VALUES ( 1,
                                   1 );

INSERT INTO DIRETOR_FILME VALUES ( 2,
                                   2 );

INSERT INTO DIRETOR_FILME VALUES ( 2,
                                   3 );

INSERT INTO DIRETOR_FILME VALUES ( 4,
                                   4 );

INSERT INTO DIRETOR_FILME VALUES ( 5,
                                   5 );

INSERT INTO DIRETOR_FILME VALUES ( 6,
                                   6 );

INSERT INTO DIRETOR_FILME VALUES ( 5,
                                   7 );

INSERT INTO DIRETOR_FILME VALUES ( 5,
                                   8 );

INSERT INTO DIRETOR_FILME VALUES ( 8,
                                   9 );

INSERT INTO DIRETOR_FILME VALUES ( 8,
                                   10 );

DECLARE
    V_ID_EP NUMBER;
BEGIN
    SELECT
        E.EPISODIO_ID
    INTO V_ID_EP
    FROM
             EPISODIO E
        JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
    WHERE
            T.SERIE_ID = 4
        AND T.NUMERO_TEMPORADA = 1
        AND E.NUMERO_EPISODIO = 1;

    INSERT INTO DIRETOR_EPISODIO VALUES ( 2,
                                          V_ID_EP );

    INSERT INTO DIRETOR_EPISODIO VALUES ( 3,
                                          V_ID_EP );

    SELECT
        E.EPISODIO_ID
    INTO V_ID_EP
    FROM
             EPISODIO E
        JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
    WHERE
            T.SERIE_ID = 4
        AND T.NUMERO_TEMPORADA = 3
        AND E.NUMERO_EPISODIO = 1;

    INSERT INTO DIRETOR_EPISODIO VALUES ( 2,
                                          V_ID_EP );

    INSERT INTO DIRETOR_EPISODIO VALUES ( 3,
                                          V_ID_EP );

    SELECT
        E.EPISODIO_ID
    INTO V_ID_EP
    FROM
             EPISODIO E
        JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
    WHERE
            T.SERIE_ID = 5
        AND T.NUMERO_TEMPORADA = 1
        AND E.NUMERO_EPISODIO = 1;

    INSERT INTO DIRETOR_EPISODIO VALUES ( 3,
                                          V_ID_EP );

    INSERT INTO DIRETOR_EPISODIO VALUES ( 2,
                                          V_ID_EP );

    SELECT
        E.EPISODIO_ID
    INTO V_ID_EP
    FROM
             EPISODIO E
        JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
    WHERE
            T.SERIE_ID = 6
        AND T.NUMERO_TEMPORADA = 1
        AND E.NUMERO_EPISODIO = 1;

    INSERT INTO DIRETOR_EPISODIO VALUES ( 6,
                                          V_ID_EP );

    INSERT INTO DIRETOR_EPISODIO VALUES ( 4,
                                          V_ID_EP );

END;
/

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    ATOR_ID,
    SERIE_ID,
    TEMPORADA_ID
)
    SELECT
        'Prêmio de Ator',
        2012,
        'Ator',
        1,
        1,
        TEMPORADA_ID
    FROM
        TEMPORADA
    WHERE
            SERIE_ID = 1
        AND NUMERO_TEMPORADA IN ( 1, 2, 3, 4 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    ATOR_ID,
    SERIE_ID,
    TEMPORADA_ID
)
    SELECT
        'Prêmio de Ator',
        2013,
        'Ator',
        3,
        2,
        TEMPORADA_ID
    FROM
        TEMPORADA
    WHERE
            SERIE_ID = 2
        AND NUMERO_TEMPORADA IN ( 1, 2, 3, 4 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    ATOR_ID,
    SERIE_ID,
    TEMPORADA_ID
)
    SELECT
        'Prêmio de Ator',
        2014,
        'Ator',
        6,
        3,
        TEMPORADA_ID
    FROM
        TEMPORADA
    WHERE
            SERIE_ID = 3
        AND NUMERO_TEMPORADA IN ( 1, 2, 3, 4 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Melhor Diretor',
           2002,
           'Diretor',
           1 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Melhor Ator',
           2002,
           'Ator',
           1 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Melhor Diretor',
           2000,
           'Diretor',
           2 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Melhor Ator',
           2000,
           'Ator',
           2 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Melhor Diretor',
           2001,
           'Diretor',
           5 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Melhor Ator',
           2001,
           'Ator',
           5 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    SERIE_ID
) VALUES ( 'Melhor Série',
           2017,
           'Série',
           4 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    SERIE_ID
) VALUES ( 'Melhor Série',
           2018,
           'Série',
           5 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    SERIE_ID
) VALUES ( 'Melhor Série',
           2019,
           'Série',
           6 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Prêmio Aventura',
           2002,
           'Filme',
           1 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Prêmio Aventura',
           2002,
           'Filme',
           5 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Prêmio Aventura',
           1999,
           'Filme',
           8 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Prêmio de
Longa-Metragem',
           2009,
           'Filme',
           4 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Prêmio de
Longa-Metragem',
           2008,
           'Filme',
           7 );

INSERT INTO PREMIACAO (
    NOME,
    ANO_PREMIACAO,
    CATEGORIA,
    FILME_ID
) VALUES ( 'Prêmio de
Longa-Metragem',
           2005,
           'Filme',
           10 );

INSERT INTO AVALIACAO (
    NOTA,
    ATOR_ID,
    FILME_ID
) VALUES ( 9.0,
           2,
           3 );

INSERT INTO AVALIACAO (
    NOTA,
    ATOR_ID,
    FILME_ID
) VALUES ( 8.8,
           6,
           3 );

INSERT INTO AVALIACAO (
    NOTA,
    ATOR_ID,
    FILME_ID
) VALUES ( 9.2,
           2,
           6 );

INSERT INTO AVALIACAO (
    NOTA,
    ATOR_ID,
    FILME_ID
) VALUES ( 9.0,
           6,
           6 );

INSERT INTO AVALIACAO (
    NOTA,
    ATOR_ID,
    FILME_ID
) VALUES ( 9.1,
           2,
           9 );

INSERT INTO AVALIACAO (
    NOTA,
    ATOR_ID,
    FILME_ID
) VALUES ( 9.3,
           10,
           9 );

INSERT INTO AVALIACAO (
    NOTA,
    ATOR_ID,
    EPISODIO_ID
)
    SELECT
        9.0,
        2,
        E.EPISODIO_ID
    FROM
             EPISODIO E
        JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
    WHERE
            T.SERIE_ID = 4
        AND T.NUMERO_TEMPORADA = 1
        AND E.NUMERO_EPISODIO = 1;

INSERT INTO AVALIACAO (
    NOTA,
    ATOR_ID,
    EPISODIO_ID
)
    SELECT
        8.9,
        6,
        E.EPISODIO_ID
    FROM
             EPISODIO E
        JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
    WHERE
            T.SERIE_ID = 4
        AND T.NUMERO_TEMPORADA = 1
        AND E.NUMERO_EPISODIO = 1;

INSERT INTO AVALIACAO (
    NOTA,
    ATOR_ID,
    EPISODIO_ID
)
    SELECT
        9.2,
        2,
        E.EPISODIO_ID
    FROM
             EPISODIO E
        JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
    WHERE
            T.SERIE_ID = 5
        AND T.NUMERO_TEMPORADA = 1
        AND E.NUMERO_EPISODIO = 1;

INSERT INTO AVALIACAO (
    NOTA,
    ATOR_ID,
    EPISODIO_ID
)
    SELECT
        9.1,
        6,
        E.EPISODIO_ID
    FROM
             EPISODIO E
        JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
    WHERE
            T.SERIE_ID = 5
        AND T.NUMERO_TEMPORADA = 1
        AND E.NUMERO_EPISODIO = 1;

INSERT INTO AVALIACAO (
    NOTA,
    EPISODIO_ID
)
    SELECT
        8.0,
        EPISODIO_ID
    FROM
             EPISODIO E
        JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
    WHERE
            T.SERIE_ID = 4
        AND T.NUMERO_TEMPORADA = 1;

INSERT INTO AVALIACAO (
    NOTA,
    EPISODIO_ID
)
    SELECT
        8.2,
        E.EPISODIO_ID
    FROM
             EPISODIO E
        JOIN TEMPORADA T ON T.TEMPORADA_ID = E.TEMPORADA_ID
    WHERE
            T.SERIE_ID = 6
        AND T.NUMERO_TEMPORADA = 1
        AND E.NUMERO_EPISODIO = 1;

CREATE OR REPLACE VIEW V_SERIES_EUR_ATOR_PREMIACOES AS
    SELECT
        S.SERIE_ID,
        S.TITULO
    FROM
             SERIE S
        JOIN PAIS      P ON P.PAIS_ID = S.PAIS_ID
                       AND P.CONTINENTE = 'Europa'
        JOIN TEMPORADA T ON T.SERIE_ID = S.SERIE_ID
        JOIN PREMIACAO PR ON PR.SERIE_ID = S.SERIE_ID
                             AND PR.CATEGORIA = 'Ator'
                             AND PR.TEMPORADA_ID = T.TEMPORADA_ID
    GROUP BY
        S.SERIE_ID,
        S.TITULO
    HAVING COUNT(DISTINCT T.TEMPORADA_ID) > 3
           AND COUNT(DISTINCT PR.TEMPORADA_ID) >= 2;

CREATE OR REPLACE VIEW V_FILMES_DIR_E_ATOR_PREMIACAO AS
    SELECT
        F.*
    FROM
        FILME F
    WHERE
        EXISTS (
            SELECT
                1
            FROM
                PREMIACAO
            WHERE
                    FILME_ID = F.FILME_ID
                AND CATEGORIA = 'Diretor'
        )
        AND EXISTS (
            SELECT
                1
            FROM
                PREMIACAO
            WHERE
                    FILME_ID = F.FILME_ID
                AND CATEGORIA = 'Ator'
        );

CREATE OR REPLACE VIEW V_SERIES_NAO_EU_ATRIZES_MAIORIA AS
    SELECT
        S.SERIE_ID,
        S.TITULO
    FROM
             SERIE S
        JOIN PAIS             P ON P.PAIS_ID = S.PAIS_ID
                       AND P.CONTINENTE <> 'Europa'
        JOIN TEMPORADA        T ON T.SERIE_ID = S.SERIE_ID
        JOIN EPISODIO         E ON E.TEMPORADA_ID = T.TEMPORADA_ID
        JOIN ATOR_EPISODIO    AE ON AE.EPISODIO_ID = E.EPISODIO_ID
        JOIN DIRETOR_EPISODIO DE ON DE.EPISODIO_ID = E.EPISODIO_ID
    GROUP BY
        S.SERIE_ID,
        S.TITULO
    HAVING SUM(
            CASE
                WHEN AE.ATOR_ID IN(
                    SELECT
                        ATOR_ID
                    FROM
                        ATOR
                    WHERE
                        GENERO = 'F'
                ) THEN
                    1
                ELSE
                    0
            END
        ) > SUM(
            CASE
                WHEN AE.ATOR_ID IN(
                    SELECT
                        ATOR_ID
                    FROM
                        ATOR
                    WHERE
                        GENERO = 'M'
                ) THEN
                    1
                ELSE
                    0
            END
        )
           AND COUNT(DISTINCT DE.DIRETOR_ID) > 1;

CREATE OR REPLACE VIEW V_EPISODIOS_MULHERES_LIVRE_GT3TEMPORADA AS
    SELECT
        E.*
    FROM
             EPISODIO E
        JOIN TEMPORADA           T ON T.TEMPORADA_ID = E.TEMPORADA_ID
        JOIN SERIE               S ON S.SERIE_ID = T.SERIE_ID
        JOIN CLASSIFICACAO_IDADE R ON R.CLASSIFICACAO_ID = S.CLASSIFICACAO_ID
                                      AND R.IDADE_MINIMA = 0
    WHERE
        EXISTS (
            SELECT
                1
            FROM
                TEMPORADA T2
            WHERE
                T2.SERIE_ID = S.SERIE_ID
            HAVING
                COUNT(*) > 3
        )
        AND EXISTS (
            SELECT
                1
            FROM
                     DIRETOR_EPISODIO DE
                JOIN DIRETOR D ON D.DIRETOR_ID = DE.DIRETOR_ID
                                  AND D.GENERO = 'F'
            WHERE
                DE.EPISODIO_ID = E.EPISODIO_ID
        );

CREATE OR REPLACE VIEW V_FILMES_POS2003_ELENCO_SERIES_PREMIADAS AS
    SELECT DISTINCT
        F.*
    FROM
             FILME F
        JOIN ATOR_FILME    AF ON AF.FILME_ID = F.FILME_ID
        JOIN ATOR_EPISODIO AE ON AE.ATOR_ID = AF.ATOR_ID
        JOIN EPISODIO      EP ON EP.EPISODIO_ID = AE.EPISODIO_ID
        JOIN TEMPORADA     T ON T.TEMPORADA_ID = EP.TEMPORADA_ID
        JOIN SERIE         S ON S.SERIE_ID = T.SERIE_ID
        JOIN PREMIACAO     PR ON PR.SERIE_ID = S.SERIE_ID
                             AND PR.CATEGORIA = 'Série'
    WHERE
        F.ANO_LANCAMENTO > 2003;

CREATE OR REPLACE VIEW V_ATOR_SERIESANTIGAS_FILMESNOVOS AS
    SELECT DISTINCT
        A.ATOR_ID,
        A.NOME
    FROM
             ATOR A
        JOIN ATOR_FILME    AF ON AF.ATOR_ID = A.ATOR_ID
        JOIN FILME         F ON F.FILME_ID = AF.FILME_ID
                        AND F.ANO_LANCAMENTO > 2003
        JOIN ATOR_EPISODIO AE ON AE.ATOR_ID = A.ATOR_ID
        JOIN EPISODIO      EP ON EP.EPISODIO_ID = AE.EPISODIO_ID
        JOIN TEMPORADA     T ON T.TEMPORADA_ID = EP.TEMPORADA_ID
        JOIN SERIE         S ON S.SERIE_ID = T.SERIE_ID
                        AND S.ANO_LANCAMENTO < 2003
    WHERE
        NOT EXISTS (
            SELECT
                1
            FROM
                     ATOR_EPISODIO AE2
                JOIN EPISODIO  EP2 ON EP2.EPISODIO_ID = AE2.EPISODIO_ID
                JOIN TEMPORADA T2 ON T2.TEMPORADA_ID = EP2.TEMPORADA_ID
                JOIN SERIE     S2 ON S2.SERIE_ID = T2.SERIE_ID
            WHERE
                    AE2.ATOR_ID = A.ATOR_ID
                AND S2.ANO_LANCAMENTO >= 2003
        )
            AND NOT EXISTS (
            SELECT
                1
            FROM
                     ATOR_FILME AF2
                JOIN FILME F2 ON F2.FILME_ID = AF2.FILME_ID
            WHERE
                    AF2.ATOR_ID = A.ATOR_ID
                AND F2.ANO_LANCAMENTO <= 2003
        );

CREATE OR REPLACE VIEW V_DIRETOR_MEDIA_AVALIACAO AS
    SELECT
        D.DIRETOR_ID,
        D.NOME,
        'Filme'      AS TIPO_TRABALHO,
        AVG(AV.NOTA) AS MEDIA_AVALIACAO
    FROM
             DIRETOR D
        JOIN DIRETOR_FILME DF ON DF.DIRETOR_ID = D.DIRETOR_ID
        JOIN FILME         F ON F.FILME_ID = DF.FILME_ID
        JOIN AVALIACAO     AV ON AV.FILME_ID = F.FILME_ID
    GROUP BY
        D.DIRETOR_ID,
        D.NOME
    UNION ALL
    SELECT
        D.DIRETOR_ID,
        D.NOME,
        'Série'      AS TIPO_TRABALHO,
        AVG(AV.NOTA) AS MEDIA_AVALIACAO
    FROM
             DIRETOR D
        JOIN DIRETOR_EPISODIO DE ON DE.DIRETOR_ID = D.DIRETOR_ID
        JOIN EPISODIO         E ON E.EPISODIO_ID = DE.EPISODIO_ID
        JOIN AVALIACAO        AV ON AV.EPISODIO_ID = E.EPISODIO_ID
    GROUP BY
        D.DIRETOR_ID,
        D.NOME;

CREATE OR REPLACE VIEW V_TITULOS_COMEDIA_MULTI_ATOR_ALTA_AVALIACAO AS
    SELECT
        TITULO,
        'Filme' AS TIPO
    FROM
        (
            SELECT
                F.TITULO,
                COUNT(*) CNT
            FROM
                     FILME F
                JOIN GENERO     G ON G.GENERO_ID = F.GENERO_ID
                                 AND G.NOME = 'Comédia'
                JOIN ATOR_FILME AF ON AF.FILME_ID = F.FILME_ID
                JOIN AVALIACAO  AV ON AV.ATOR_ID = AF.ATOR_ID
                                     AND AV.FILME_ID = F.FILME_ID
                                     AND AV.NOTA > 8.5
            GROUP BY
                F.TITULO
            HAVING
                COUNT(*) >= 2
        )
    UNION ALL
    SELECT
        TITULO,
        'Série' AS TIPO
    FROM
        (
            SELECT
                S.TITULO,
                COUNT(DISTINCT AE.ATOR_ID) CNT
            FROM
                     SERIE S
                JOIN GENERO        G ON G.GENERO_ID = S.GENERO_ID
                                 AND G.NOME = 'Comédia'
                JOIN TEMPORADA     T ON T.SERIE_ID = S.SERIE_ID
                JOIN EPISODIO      E ON E.TEMPORADA_ID = T.TEMPORADA_ID
                JOIN ATOR_EPISODIO AE ON AE.EPISODIO_ID = E.EPISODIO_ID
                JOIN AVALIACAO     AV ON AV.ATOR_ID = AE.ATOR_ID
                                     AND AV.EPISODIO_ID = E.EPISODIO_ID
                                     AND AV.NOTA > 8.5
            GROUP BY
                S.TITULO
            HAVING
                COUNT(DISTINCT AE.ATOR_ID) >= 2
        );

COMMIT;